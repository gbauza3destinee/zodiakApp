{
  "openapi": "3.0.3",
  "info": {
    "title": "Zodiak App - OpenAPI 3.0",
    "description": "This is a single page application for displaying zodiac signs.",
    "termsOfService": "http://swagger.io/terms/",
    "contact": {
      "email": "dgb.javadeveloper@gmail.com"
    },
    "license": {
      "name": "Apache 2.0",
      "url": "http://www.apache.org/licenses/LICENSE-2.0.html"
    },
    "version": "1.0.11"
  },
  "externalDocs": {
    "description": "Find out more about Swagger",
    "url": "http://swagger.io"
  },
  "servers": [
    {
      "url": "https://petstore3.swagger.io/api/v3"
    }
  ],
  "tags": [
    {
      "name": "zodiac",
      "description": "Everything about your Zodiac & Elemental Signs",
      "externalDocs": {
        "description": "Find out more",
        "url": "http://swagger.io"
      }
    },
    {
      "name": "user",
      "description": "Operations about user"
    }
  ],
  "paths": {
    "/user/{userName}": {
      "post": {
        "tags": [
          "user"
        ],
        "summary": "A User entering information to save their entry.",
        "description": "Add a new User to the system",
        "operationId": "createUser",
        "parameters": [
          {
            "name": "userName",
            "in": "path",
            "description": "userName of user that needs to be updated",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "pronouns",
            "in": "query",
            "description": "Pronouns of user that needs to be saved",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "birthdate",
            "in": "query",
            "description": "Birthdate of user that needs to be updated",
            "schema": {
              "type": "string"
            }
          }
        ],
        "requestBody": {
          "description": "Create a new User in the store",
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "application/xml": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            },
            "application/x-www-form-urlencoded": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          },
          "required": true
        },
        "responses": {
          "200": {
            "description": "Successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "405": {
            "description": "Invalid input"
          }
        }
      }
    },
    "/zodiac/user/{userId}": {
      "get": {
        "tags": [
          "zodiac"
        ],
        "summary": "Find zodiac order by userID",
        "description": "For valid response try integer IDs with value <= 5 or > 10. Other values will generate exceptions.",
        "operationId": "getZodiacByUserId",
        "parameters": [
          {
            "name": "userId",
            "in": "path",
            "description": "ID of user that needs to be fetched",
            "required": true,
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Zodiac"
                }
              },
              "application/xml": {
                "schema": {
                  "$ref": "#/components/schemas/Zodiac"
                }
              }
            }
          },
          "400": {
            "description": "Invalid user ID supplied"
          },
          "404": {
            "description": "User and Zodiac not found"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "Zodiac": {
        "type": "object",
        "properties": {
          "userid": {
            "type": "integer",
            "format": "int64",
            "example": 14045060
          }
        }
      },
      "User": {
        "type": "object",
        "properties": {
          "username": {
            "type": "string",
            "format": "int64",
            "example": "daisyluv"
          },
          "pronouns": {
            "type": "string",
            "example": "they them"
          },
          "birthdate": {
            "type": "integer",
            "example": "2001-08-02T00:00:00.000Z"
          }
        },
        "xml": {
          "name": "user"
        }
      }
    },
    "requestBodies": {
      "User": {
        "description": "User object that needs to be added to the database",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/User"
            }
          },
          "application/xml": {
            "schema": {
              "$ref": "#/components/schemas/User"
            }
          }
        }
      },
      "UserArray": {
        "description": "List of user object",
        "content": {
          "application/json": {
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        }
      }
    }
  }
}