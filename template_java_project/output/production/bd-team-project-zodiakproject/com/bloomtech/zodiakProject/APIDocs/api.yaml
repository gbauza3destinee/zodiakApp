#### updated last october 11, 6:30pm

openapi: 3.0.3
info:
  title: Zodiak App - OpenAPI 3.0
  description: |-
    This app receives a User's input (their birth month and day, their name and pronouns. After, it retrieves a String representation of the corresponding Sign. User's can also save their input to program's database to access their sign easier next time.
  contact:
    email: dgb.javadeveloper@gmail.com
  license:
    name: Apache 2.0
    url: http://www.apache.org/licenses/LICENSE-2.0.html
  version: 1.0.11
externalDocs:
  description: Find out more about Swagger
  url: http://swagger.io

tags:
  - name: zodiac
    description: Everything about your Zodiac & Elemental Signs
    externalDocs:
      description: Find out more
      url: http://swagger.io
  - name: user
    description: Operations about user
paths:
  /user/{userName}:
    post:
      tags:
        - user
      summary: A User entering information to save their entry.
      description: Add a new User to the system
      operationId: createUser
      parameters:
        - name: userName
          in: path
          description: userName of user info that needs to be saved
          required: true
          schema:
            type: integer
            format: int64
        - name: pronouns
          in: query
          description: Pronouns of user that need to be saved
          schema:
            type: string
        - name: birthdate
          in: query
          description: User Birthdate in MM-DD format to be saved
          schema:
            type: string
      requestBody:
        description: Create a new User in the store
        content:
          application/json:
            schema:
              $ref: '/APIDocs/requestBody.json'
          application/xml:
            schema:
              $ref: '#/components/schemas/User' ##### we need another version of this in yaml
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/User'
        required: true
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/APIDocs/responseBody.json'
            application/xml:
              schema:
                $ref: '#/components/schemas/User' ##### we need a second file in yaml syntax?
        '405':
          description: Invalid input

  /zodiac/user/{userId}:
    get:
      tags:
        - zodiac
      summary: Find my zodiac sign by my saved userID
      description: For valid response try integer IDs with value <= 5 or > 10. Other values will throw errors.
      operationId: getZodiacByUserId
      parameters:
        - name: userId
          in: path
          description: ID of user that needs to be fetched
          required: true
          schema:
            type: integer
            format: int64
      responses:
        '200':
          description: Successful Operation- User information was saved!
          content:
            application/json:
              schema:
                $ref: '#/APIDocs/responseBodyPost.json' #### for saving / post action
            application/xml:
              schema:
                $ref: '#/components/schemas/Zodiac'
        '400':
          description: Invalid user ID provided.
        '404':
          description: Sorry, this userId and zodiac information was not found!

components:
  schemas:
  Zodiac:
    type: String
    properties:
      userid:
        type: integer
        format: int64
        example: 14045060

  User:
    type: object
    properties:
      username:
        type: string
        example: daisyluv
      pronouns:
        type: string
        example: they them
      birthdate:
        type: integer
        example: 06-30, MM-DD format
    xml:
      name: user

  requestBodies:
    User:
      description: Request for User to be saved to the app's database!
      content:
        application/json:
          schema:
            $ref: '#/APIDocs/requestBodyPost.json'
        application/xml:
          schema:
            $ref: '#/components/schemas/User'
    UserArray:
      description: List of user object
      content:
        application/json:
          schema:
            type: array
            items:
              $ref: '#/components/schemas/User'

